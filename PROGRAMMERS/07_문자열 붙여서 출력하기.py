"""
✅문제 설명
두 개의 문자열 str1, str2가 공백으로 구분되어 입력으로 주어집니다.
입출력 예와 같이 str1과 str2을 이어서 출력하는 코드를 작성해 보세요.

제한사항
1 ≤ str1, str2의 길이 ≤ 10

입출력 예
입력 #1
apple pen
출력 #1
applepen

입력 #2
Hello World!
출력 #2
HelloWorld!

✅목적: 문자열 붙여서 출력하는 방법을 알고 있는지 확인 목적


"""

# 코드 작성

str1, str2 = input().strip().split(' ')
print(str1+str2)

# 문자열을 이어 붙이려면 + 연산자를 사용할 수 있다.
# 문자열이기에 숫자를 넣어도 문자열로 인식한다. ex) str1=3, str2=5 -> 35로 출력된다.


"""
✅다른 사람 풀이

1.
print(input().strip().replace(' ', ''))

1-1.
replace(' ', '')
' ' (공백)을 '' (빈 문자열)로 바꿔준다. 다시말하자면 문자열 내에서 모든 공백을 제거한다.
input -> strip(양쪽 끝의 공백을 제거) -> replace(주어진 조건으로, 문자열 내 공백 제거) 순이다.

2.
str1, str2 = input().strip().split(' ')
print(str1, str2, sep='')

2-1.
sep=''는 print() 함수에서 출력할 항목들 사이의 구분자를 설정하는 인자이다.
기본적으로 print()는 여러 항목을 출력할 때, 항목들 사이에 공백(' ')을 자동으로 넣는다. 
그러나 sep 인자를 사용하여 그 구분자를 변경할 수 있습니다.

여기서 sep=''은 항목들 사이에 공백 없이 빈 문자열을 넣겠다는 뜻이다.
쉽게말해서는 str1과 str2 사이에 공백을 넣지 않고 바로 이어서 출력하겠다는 의미이다.

print(str1, str2, sep=''): print() 함수는 str1과 str2를 출력하는데, 
sep=''로 설정되어 있으므로, 두 문자열 사이에 공백을 넣지 않고 연속해서 출력한다.


3.
str1, str2 = input().strip().split(' ')
result = str1+str2
print(f"{result}")

"""


# ✅ 다른 사람들의 풀이를 비교해보면서, 배울 점들이 많은 것을 느꼈다.
# 하나의 풀이만 생각하지말고 다양한 풀이들을 보며 배워보자.