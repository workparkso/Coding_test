"""
✅문제 설명
 KOI 전자에서는 건강에 좋고 맛있는 훈제오리구이 요리를 간편하게 만드는 인공지능 오븐을 개발하려고 한다. 인공지능 오븐을 사용하는 방법은 적당한 양의 오리 훈제 재료를 인공지능 오븐에 넣으면 된다. 그러면 인공지능 오븐은 오븐구이가 끝나는 시간을 분 단위로 자동적으로 계산한다.

또한, KOI 전자의 인공지능 오븐 앞면에는 사용자에게 훈제오리구이 요리가 끝나는 시각을 알려 주는 디지털 시계가 있다.

훈제오리구이를 시작하는 시각과 오븐구이를 하는 데 필요한 시간이 분단위로 주어졌을 때, 오븐구이가 끝나는 시각을 계산하는 프로그램을 작성하시오.

입력
첫째 줄에는 현재 시각이 나온다. 현재 시각은 시 A (0 ≤ A ≤ 23) 와 분 B (0 ≤ B ≤ 59)가 정수로 빈칸을 사이에 두고 순서대로 주어진다. 두 번째 줄에는 요리하는 데 필요한 시간 C (0 ≤ C ≤ 1,000)가 분 단위로 주어진다.

출력
첫째 줄에 종료되는 시각의 시와 분을 공백을 사이에 두고 출력한다. (단, 시는 0부터 23까지의 정수, 분은 0부터 59까지의 정수이다. 디지털 시계는 23시 59분에서 1분이 지나면 0시 0분이 된다.)



✅목적: 시간과 분 관련된 문제를 어떻게 유연하게 푸는지 확인 목적
"""

# 코드 작성
#  (A, B)에 C분을 더한 후, 24시간 형식으로 변환하기


A, B = map(int, input().split())  # 시, 분
C = int(input())  # 추가하는 요리 시간(분)

# 총 분
total_minutes = B + C

# 추가될 시간, 최종 분, 최종 시간
extra_hours = total_minutes // 60  
final_minutes = total_minutes % 60  
final_hours = (A + extra_hours) % 24  #시간은 24시간제니까까

print(final_hours, final_minutes)


#---------------------------------------------------
# datetime 모듈로도 풀 수 있다는 것을 발견했다.
from datetime import datetime, timedelta

# 입력 받기
A, B = map(int, input().split())  # 시, 분
C = int(input())  # 요리 시간(분)

# 현재 시각을 datetime 객체로 변환
current_time = datetime(2024, 1, 1, A, B)  # 연도와 월, 일은 임의로 설정

# 분을 더하기 (timedelta 사용)
new_time = current_time + timedelta(minutes=C)

# 결과 출력
print(new_time.hour, new_time.minute)

# datetime을 사용함으로,
# timedelta(minutes=C)를 사용하면 직접 나눗셈, 나머지 연산을 하지 않아도 된다고한다.
# 23:59에서 1분을 더하면 자동으로 00:00으로 변환된다.

# timedetla란?
# Python의 datetime 모듈에서 제공하는 클래스이다. 
# timedelta는 시간 간격을 나타내며, 두 날짜나 시간 사이의 차이를 계산하는 데 사용된다. 
# 이 클래스는 날짜와 시간을 더하거나 빼는 연산을 처리할 수 있게 해준준다.

#timedelta의 주요 기능
#날짜 또는 시간의 차이를 나타냄
#날짜 및 시간에 대한 더하기, 빼기 연산이 가능
#초, 분, 시간, 일, 주 등의 단위로 표현




#✅ 알람시계보다 조금 더 업그레이드 된 문제이나, 차근차근 생각해서 단계별로 진행하면 된다.
# 모든 문제에 어렵다고 푸는 것을 그만두지말고, 차근차근 풀어보자.





